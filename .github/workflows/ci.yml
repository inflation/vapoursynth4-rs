name: CI

on: 
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Unit Tests
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            vapoursynth-build/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Fetch VapourSynth
        uses: actions/checkout@v4
        with:
          repository: vapoursynth/vapoursynth
          path: vapoursynth
          ref: R66
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Build VapourSynth in debug mode
        run: bash scripts/build-vs.sh
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Dependency
        run: cargo fetch
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Tests
        run: cargo nextest run --all-features --workspace
        env:
          VAPOURSYNTH_LIB_PATH: vapoursynth-build/lib
          DYLD_LIBRARY_PATH: vapoursynth-build/lib

  tests-windows:
    name: Unit Tests (windows-latest)
    timeout-minutes: 10
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: microsoft/setup-msbuild@v2
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            vapoursynth/msvc_project/x64/Debug/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Fetch VapourSynth
        uses: actions/checkout@v4
        with:
          repository: vapoursynth/vapoursynth
          path: vapoursynth
          ref: R66
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Fetch zimg
        uses: actions/checkout@v4
        with:
          repository: sekrit-twc/zimg
          path: vapoursynth/zimg
          ref: release-3.0.5
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Install Python packages
        run: |
          python -m pip install -U pip
          pip install -U cython 
      - name: Build VapourSynth in debug mode
        run: pwsh -Command ./scripts/build-vs.ps1
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - name: Dependency
        run: cargo fetch
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Tests
        run: |
          $env:VAPOURSYNTH_LIB_PATH="$PWD/vapoursynth/msvc_project/x64/Debug/"
          $env:PATH="$env:VAPOURSYNTH_LIB_PATH;$env:PATH"
          cargo nextest run --all-features --workspace

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            vapoursynth-build/
          key: ${{ runner.os }}-cargo-cov-${{ hashFiles('**/Cargo.lock') }}
      - name: Fetch VapourSynth
        uses: actions/checkout@v4
        with:
          repository: vapoursynth/vapoursynth
          path: vapoursynth
          ref: R66
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Build VapourSynth in debug mode
        run: bash scripts/build-vs.sh
      - name: Dependency
        run: cargo fetch
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Generate code coverage
        run: 
          cargo +nightly llvm-cov nextest
            --all-features --workspace
            --ignore-filename-regex vapoursynth4-sys/
            --lcov --output-path lcov.info
        env:
          VAPOURSYNTH_LIB_PATH: vapoursynth-build/lib
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  sanitizer:
    name: Sanitizers
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            vapoursynth-build/
          key: ${{ runner.os }}-cargo-sanitizer-${{ hashFiles('**/Cargo.lock') }}
      - name: Fetch VapourSynth
        uses: actions/checkout@v4
        with:
          repository: vapoursynth/vapoursynth
          path: vapoursynth
          ref: R66
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Build VapourSynth in debug mode
        run: bash scripts/build-vs.sh
      - name: Dependency
        run: cargo fetch
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Address Sanitizer
        run: 
          cargo +nightly nextest run
            -Z build-std --target=x86_64-unknown-linux-gnu --all-features
        env:
          RUSTFLAGS: "-Z sanitizer=address"
          RUSTDOCFLAGS: "-Z sanitizer=address"
          VAPOURSYNTH_LIB_PATH: vapoursynth-build/lib

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust
        run: rustup update stable
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - name: Dependency
        run: cargo fetch
        if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      - name: Run Clippy with reviewdog
        uses: giraffate/clippy-action@v1.0.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          clippy_flags: --all-features --tests -- -D warnings
          reporter: github-check

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable
      - name: Format check
        run: cargo fmt --all -- --check
